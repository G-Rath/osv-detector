name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true

      - run: make test
  test-macos:
    name: Test on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true

      - run: make test
  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true

      - run: make test
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.47
  go-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - run: make lint-with-go-fmt
  goreleaser:
    runs-on: ubuntu-latest
    needs:
      - test-ubuntu
      - test-macos
      - test-windows
      - golangci-lint
      - go-fmt
    permissions:
      contents: write # to create a GitHub release (goreleaser/goreleaser-action)
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
